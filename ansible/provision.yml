- name: Configure server
  hosts: server
  remote_user: root
  become: yes
  gather_facts: no

  vars:
    app_name: lemon
    prefix: "discord-prod"

  pre_tasks:
    - name: Install python on remote machine
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)
      changed_when: False
    - setup:

  tasks:
    - include: wireguard_vpn.yml
      vars:
        wireguard_vpn_cidr: 10.200.200.1/24
        wireguard_users:
          - username: rce
            publickey: lGQkn1YB2XGxmyVZso9l/anaQRatlJZH9ahY7ifY1gY=
            allowedips: 10.200.200.2/32
    - include: deployment_dependencies.yml
    - include: unattended_upgrades.yml

    - name: Add Deadsnakes PPA
      apt_repository:
        repo: ppa:deadsnakes/ppa

    - name: Create group
      group:
        name: "{{ app_name }}"

    - name: Create user
      user:
        name: "{{ app_name }}"

    - name: Set open file limit
      template:
        src: "templates/99-sysctl.conf.j2"
        dest: "/etc/sysctl.d/99-sysctl.conf"
      notify:
        - reload sysctl.conf

    - include: postgres.yml
      vars:
        postgres_listen_addresses_string: 'localhost, 10.200.200.1'
        postgres_allowed_ips:
          - 10.200.200.1/24
    - include: redis.yml

    - name: Remove old packages
      apt:
        state: absent
        name: "{{ packages }}"
      vars:
        packages:
          - python3.7
          - python3.7-dev

    - name: Install required packages
      apt:
        update_cache: yes
        name: "{{ packages }}"
      vars:
        packages:
          - python3.8
          - python3.8-dev
          - python3.8-distutils
          - libpq-dev
          - libxml2-dev # for lxml
          - libxslt1-dev # for lxml

    - name: Copy source to server
      synchronize:
        src: ../src
        dest: "/home/{{ app_name }}"
        delete: yes
        rsync_opts:
          - "--chown={{ app_name }}:{{ app_name }}"
      notify:
        - restart services

    - name: Install pip
      shell: "curl https://bootstrap.pypa.io/get-pip.py | python3.8"

    - name: Install Python dependencies
      shell: "python3.8 -m pip install -r /home/{{ app_name }}/src/requirements.txt"
      notify:
        - restart services

    - name: Create services
      template:
        src: "templates/{{ item.template }}.service.j2"
        dest: "/etc/systemd/system/{{ item.service }}.service"
      with_items:
        - template: systemd
          service: "{{ app_name }}"
        - template: archiver
          service: "{{ app_name }}-archiver"
      notify:
        - reload unit files
        - restart services

    - name: enable and start service
      service:
        name: "{{ app_name }}"
        state: started
        enabled: yes

    - include: nodejs.yml
    - include: web.yml
    - include: letsencrypt.yml
    - include: logs.yml

  handlers:
    - name: reload sysctl.conf
      shell: sysctl -p

    - name: reload unit files
      shell: systemctl daemon-reload

    - name: reload nginx config
      service:
        name: nginx
        state: reloaded

    - name: restart journald-cloudwatch
      service:
        name: "journald-cloudwatch"
        state: restarted

    - name: restart services
      service:
        name: "{{ item }}"
        state: restarted
      with_items:
        - "{{ app_name }}"
        - "{{ app_name }}-archiver"

    - name: restart web service
      service:
        name: "{{ app_name }}-web"
        state: restarted
